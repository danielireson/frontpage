---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  DeploymentBucket:
    Type: String
  ContentBucket:
    Type: String
  CertificateARN:
    Type: String

Environment:
  Variables:
    CONTENT_BUCKET: !Ref ContentBucket

Resources:
  DomainBucketRootPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${ContentBucket}/*
            Principal: "*"
  DomainBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ContentBucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  DomainBucketDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
            DomainName: !Sub ${ContentBucket}.s3-website-${AWS::Region}.amazonaws.com
            Id: origin
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: true
          TargetOriginId: origin
          ViewerProtocolPolicy: redirect-to-https
          LambdaFunctionAssociations:
            - EventType: "origin-request"
              LambdaFunctionARN: !Ref VersionedLambdaRenderFunction
        Aliases:
          - !Sub ${ContentBucket}
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateARN
          SslSupportMethod: sni-only
        Enabled: true
  DomainBucketDistributionRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub ${ContentBucket}.
      Name: !Sub ${ContentBucket}.
      Type: A
      AliasTarget:
        DNSName: !GetAtt DomainBucketDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
  DomainBucketWWW:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${ContentBucket}
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Sub ${ContentBucket}
          Protocol: https
  DomainBucketWWWDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
            DomainName: !Sub www.${ContentBucket}.s3-website-${AWS::Region}.amazonaws.com
            Id: origin
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: true
          TargetOriginId: origin
          ViewerProtocolPolicy: redirect-to-https
        Aliases:
          - !Sub www.${ContentBucket}
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateARN
          SslSupportMethod: sni-only
        Enabled: true
  DomainBucketDistributionWWWRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub ${ContentBucket}.
      Name: !Sub www.${ContentBucket}.
      Type: A
      AliasTarget:
        DNSName: !GetAtt DomainBucketWWWDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  LambdaBuildFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: functions/build
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs12.x
      Timeout: 5
  VersionedLambdaBuildFunction:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaBuildFunction
  LambdaRenderFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: functions/render
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs12.x
      Timeout: 5
  VersionedLambdaRenderFunction:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaRenderFunction

Outputs:
  DistributionURL:
    Description: The cloudfront distribution URL
    Value: !GetAtt DomainBucketDistribution.DomainName
  ApplicationURL:
    Description: The public application URL
    Value: !Ref ContentBucket
